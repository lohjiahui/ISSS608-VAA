---
title: "Hands-on Exercise 1"
author: "Loh Jiahui"
---

# 1.1 Learning Outcomes

-   Learn the basic principles and essential components of ggplot2
-   Gain hands-on experience on using these components to plot statistical graphics based on the principle of Layered Grammar of Graphics2
-   Apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics2

# 1.2 Getting Started

## 1.2.1 Install and launching R packages

The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.


```{r}
pacman::p_load(tidyverse)
```

## 1.2.2 Importing the data

```{r}
exam_data <- read.csv("data/Exam_data.csv")
```

-   Year end examination grades of a cohort of primary 3 students from a local school.

-   There are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.

    -   The categorical attributes are: ID, CLASS, GENDER and RACE.

    -   The continuous attributes are: MATHS, ENGLISH and SCIENCE.

# 1.3 Introducing ggplot

## 1.3.1 R Graphics VS ggplot

::: panel-tabset
## R Graphics

```{r}
hist(exam_data$MATHS)
```

## ggplot2

```{r}
ggplot(data=exam_data, aes(x = MATHS)) +
  geom_histogram(bins=10, 
                 boundary = 100,
                 color="black", 
                 fill="grey") +
  ggtitle("Distribution of Maths scores")
```
:::

# 1.4 Grammar of Graphics

Before we getting started using ggplot2, it is important for us to understand the principles of Grammer of Graphics.

Grammar of Graphics is a general scheme for data visualization which breaks up graphs into semantic components such as scales and layers. It was introduced by Leland Wilkinson (1999) **Grammar of Graphics**, Springer. The grammar of graphics is an answer to a question:

What is a statistical graphic?

In the nutshell, Grammar of Graphics defines the rules of structuring mathematical and aesthetic elements into a meaningful graph.

There are two principles in Grammar of Graphics, they are:

-   Graphics = distinct layers of grammatical elements

-   Meaningful plots through aesthetic mapping

A good grammar of graphics will allow us to gain insight into the composition of complicated graphics, and reveal unexpected connections between seemingly different graphics (Cox 1978). It also provides a strong foundation for understanding a diverse range of graphics. Furthermore, it may also help guide us on what a well-formed or correct graphic looks like, but there will still be many grammatically correct but nonsensical graphics.

## 1.4.1 A Layered Grammar of Graphics

ggplot2 is an implementation of Leland Wilkinson's Grammar of Graphics. Figure below shows the seven grammars of ggplot2.

![](image4.jpg)

A short description of each building block are as follows:

-   **Data**: The dataset being plotted.

-   **Aesthetics** take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.

-   **Geometrics**: The visual elements used for our data, such as point, bar or line.

-   **Facets** split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).

-   **Statistics**, statiscal transformations that summarise data (e.g. mean, confidence intervals).

-   **Coordinate systems** define the plane on which data are mapped on the graphic.

-   **Themes** modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background.

1.5 Essential Grammatical Elements in ggplot2: data

Let us call the ggplot() function using the code chunk on the right.

```{r}
ggplot(data=exam_data)
```

::: callout-note
-   A blank canvas appears.

-   ggplot() initializes a ggplot object.

-   The data argument defines the dataset to be used for plotting.

-   If the dataset is not already a data.frame, it will be converted to one by fortify().
:::

1.6 Essential Grammatical Elements in ggplot2: Aesthetic mappings

The aesthetic mappings take attributes of the data and and use them to influence visual characteristics, such as position, colour, size, shape, or transparency. Each visual characteristic can thus encode an aspect of the data and be used to convey information.

All aesthetics of a plot are specified in the aes() function call (in later part of this lesson, you will see that each geom layer can have its own aes specification)

Code chunk below adds the aesthetic element into the plot.

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS))
```

# 1.7 Essential Grammatical Elements in ggplot2: geom

Geometric objects are the actual marks we put on a plot. Examples include:

-   geom_point for drawing individual points (e.g., a scatter plot) geom_line for drawing lines (e.g., for a line charts)

-   geom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)

-   geom_bar for drawing bars (e.g., for bar charts)

-   geom_histogram for drawing binned values (e.g. a histogram) geom_polygon for drawing arbitrary shapes

-   geom_map for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function).

![](image6.jpg.png)

## 1.7.1 Geometric Objects: geom_bar

The code chunk below plots a bar chart by using geom_bar().

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()
```
