---
title: "In-Class_Ex01"
author: "Loh Jiahui"
---

## 1. Getting Started

The code chunk below uses p_load() of pacman package.

```{r}
pacman::p_load(tidyverse)

```

Next, we import the data.

```{r}
exam_data <- read.csv("data/Exam_data.csv")
```

### 1.1. Working with theme

Horizontal bar chart of students by race

```{r}
ggplot(data=exam_data, 
  aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  ggtitle("Students by Race") +
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "lightblue",
                                colour = "lightblue",
                                linewidth = 0.5, linetype = "solid"),
    panel.grid.major = element_line(linewidth = 0.5, linetype = 'solid',
                                colour = "white"), 
    panel.grid.minor = element_line(linewidth = 0.25, linetype = 'solid',
                                colour = "white")
  ) 
```

## 2. Designing Data-driven graphics for Analysis I

The Original Design

A simple vertical bar chart for frequency analysis.

```{r}
ggplot(data=exam_data, 
  aes(x=RACE)) +
  geom_bar() +
  theme_minimal()
```

::: callout-note
-   y axis lavel is not clear (i.e. count)
-   To support effective comparison, the bars should be sorted by their respective frequencies
-   For statis graph, frequency values should be added to provided additional information
:::

With reference to the critics on the earlier slide, a makeover was conducted.

```{r}
ggplot(data=exam_data, 
  aes(x=fct_infreq(RACE))) +
  geom_bar() +
  theme_minimal() +
  ylim(0,220) +
  labs(y= "Number of Pupils", x = "Race") +
  geom_text(stat="count", 
      aes(label=paste0(after_stat(count), ", ", 
      round(after_stat(count)/sum(after_stat(count))*100, 1), "%")),
      vjust=-1)
```

## 3. Designing Data-driven graphics for Analysis II

The Original Design

A basic histogram with little additional information on the data.

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_histogram(bins = 20)
```

::: callout-note
The following was done to improve the chart: - Adding mean and median lines on the histogram plot - Change fill colour and line colour
:::

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_histogram(colour = 'darkgrey', fill = 'lightblue',bins = 20) +
  labs(y= "Number of Pupils", x = "Maths Score") +
  geom_vline(aes(xintercept = mean(MATHS, na.rm = T)), 
             col = 'red', 
             linetype = 'longdash', 
             linewidth = 1) + 
  geom_vline(aes(xintercept=median(MATHS, na.rm=T)),
             col="green",
             linetype="dashed", 
             linewidth=1)
```

## 4. Designing Data-driven graphics for Analysis III

The original Design

The histograms below are elegantly designed, but not informative. More context, such as comparing the scores by gender with all pupuls may provided an added, meaningful perspective.

```{r}
ggplot(data=exam_data, 
       aes(x= ENGLISH)) +
  geom_histogram() +
    facet_wrap(~ GENDER)
```

After some refining.

```{r}
d <- exam_data   
d_bg <- d[, -3]  

ggplot(d, aes(x = ENGLISH, fill = GENDER)) +
  geom_histogram(data = d_bg, fill = "grey", alpha = .5) +
  geom_histogram(colour = "black") +
  facet_wrap(~ GENDER) +
  guides(fill = FALSE) +  
  theme_bw()
```

## 5. Designing Data-driven graphics for Analysis VI

The original Design

A simple scatter plot

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() 

```

::: callout-note
The following was done to improve the chart:
-   Y axis edited so it is aligned with the x axis
-   Added dotted guiding lines at the 50 mark point for both axis
:::

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  xlim(0,100) +
  ylim(0,100) +
  geom_point() +
  geom_hline(yintercept=50, colour = 'grey', linetype = 'longdash') + 
  geom_vline(xintercept=50, colour = 'grey', linetype = 'longdash')
```
